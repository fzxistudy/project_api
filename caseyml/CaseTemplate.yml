# 需要注意：yml文件的名称要与case所在的py文件的文件名称保持一致。
procotol: &procotol http
host: &host storage.noteach.com.cn
useragent: &agent Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36
# 用于class的title
feature: 登录功能模块的相关验证
# 功能模块标识
module_flag: &moduleflag v5
# v5功能模块的域名
v5_test_host: &v5_test xxxxx
v5_dev_host: &v5_dev xxxxx
v5_prod_host: &v5_prod xxxxx
# v6功能模块的域名
v6_test_host: &v5_test xxxxx
v6_dev_host: &v5_dev xxxxx
v6_prod_host: &v5_prod xxxxx

login:
  run:
  story: 登录
#  所属的功能模块组，不同的模块组对应的域名不一样
  module_flag: *moduleflag
#  case的描述/目的
  description:
    - 验证正常登录
    - 验证错误的账号密码能否登录成功
#  设置request_param 下的params 是params 还是data
  params_type: params
#  域名
  host: *host
  path: /passport/v5/login/username
  request_param: &req_param
    url: $url
    method: post
    headers:
      Content-Type: application/x-www-form-urlencoded
      User-Agent: *agent
    params: &loginparams
      username: 13718620015
      password: admin123
      platform: web
      clientinfo: ~
      pid: &pid CZWlTE4lVgz9
#  请求参数
  request_params:
    - <<: *req_param
    - <<: *req_param
      params:
        <<: *loginparams
        username: 13718620016
#  响应结果的处理
  response:
#    要保存的文件路径(含文件名称),当值为online时表示使用setattr和getattr来获取相关的数据。
#    当不使用在线保存响应结果时，filepath 要录入具体的json文件在response_data目录下的路径名称
#    例：0018.json 而不是/0018.json 或 response_data/0018.json 或 /response_data/0018.json
    - filepath: online
      # 要提取响应结果的哪些值，这些要使用jsonpath表达式。resp_keys 的值必须为list
      resp_keys: [ $.auth_token ]
      # 响应结果提示的字段值在保存时对应的key
      keys: [ auth_token_0015 ]
    - filepath: 0018.json
      resp_keys: [$.auth_token]
      keys: [0015_token]
#  依赖的数据
  depends_on: ~
#  断言
  assert:
#    一个case里的多重断言示例
#    jsonpath表示式的开头必须为jsonpath,不能是jsonpath.jsonpath
#    需要注意的是:当对response的json结果进行数据提取时，此时jsonpath
#    表达式里的变量为 req_json，而不是 req ; 若是获取状态码,表达式为: req.status_code
#    所有的断言必须统一使用pytest.assume(),不支持其他断言,如自带的assert()断言
    - [pytest.assume(200==req.status_code),
       "pytest.assume('奥林匹克化学学校' in (jsonpath(req_json,'$.schoolname')))"]
#    - pytest.assume('奥林匹克化学学校' in (jsonpath(req_json,'$.schoolname')))
    - pytest.assume(401==req.status_code)

# 检查登录状态
checklogin:
  run:
  story: 登录
  module_flag: *moduleflag
  description: ["校验登录状态"]
  params_type: params
  host: *host
  path: /passport/v5/login/check
  request_param: &req_param1
    url: $url
    method: get
    headers:
      User-Agent: *agent
      Authorization: Bearer $token
    params:
      pid: *pid
  request_params:
    - <<: *req_param1
  response: ~
  depends_on:
#    online: 默认为true，当炎False时，表示要读取文件。online 使用 getattr来获取相应的值。
#    当使用在线模式时，case_id 为空，此时的depend_key表示是哪个key
#    当online为False时，depned_key的值为jsonpath表达式。
#    当type为response时，此时的case_id的值为json文件在response_data目录下的相对路径名称,如0018.json
#    当type为request时，case_id的值为具体的为所依赖的case所在的yml文件,如: test_demo.yml::login
#    目前不考虑request类型的依赖,因为在同个yml文件中可以进行数据引用。
    - online: true
      type: response
      case_id:
      depend_key: [ auth_token_0015 ]
      replace_key: [token]
  assert:
    - pytest.assume(200==req.status_code)

